buildscript {
	// declare some versions
	ext.kotlin_version = '1.2.60'
	ext.spark_kotlin_version = '1.0.0-alpha'
	ext.thymeleaf_version = '3.0.9.RELEASE'
	ext.exposed_version = '0.10.4'
	ext.slf4j_version = '1.6.2'
	ext.spek_version = '1.1.5'
	ext.mockk_version = '1.8.5'
	ext.commonmark_version = '0.11.0'
	ext.caisson_version = '0.3.3-SNAPSHOT'
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.60'
}

group 'org.liamjd'
version '1.0-SNAPSHOT'


repositories {
	mavenCentral()
	mavenLocal()
	jcenter()
	// for exposed database
	maven { url "http://dl.bintray.com/kotlin/exposed" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // spark web framework
    compile group: 'com.sparkjava', name: 'spark-kotlin', version: "$spark_kotlin_version"

	// caisson spark object binding
	compile group: 'org.liamjd', name: 'caisson', version: "$caisson_version"
    // Thymeleaf templating engine
    compile group: 'org.thymeleaf', name:"thymeleaf", version: "$thymeleaf_version"
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time', version: '3.0.0.RELEASE'
	// sl4j logging
	compile group: 'org.slf4j', name: 'slf4j-simple', version: "$slf4j_version"

	// database - jetbrain's exposed
	compile group: 'org.jetbrains.exposed', name: 'exposed', version: "$exposed_version"
	compile group: 'org.jetbrains.exposed', name: 'spring-transaction', version:"$exposed_version"
	compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.0.3'

	// reflections for annotation scanning
	compile group: 'org.reflections', name: 'reflections', version: "0.9.11"

	// json parsing
//	compile group: 'com.beust', name: 'klaxon', version: '3.0.1'

	// markdown
	compile group: 'com.atlassian.commonmark', name: 'commonmark', version: "$commonmark_version"

	// testing
	testCompile group: "org.jetbrains.kotlin", name: "kotlin-test", version: "$kotlin_version"
	testCompile(group: "org.jetbrains.spek", name: "spek-api", version: "$spek_version") {
		// exclude kotlin from spek, so that we can use the newest version
		exclude group: 'org.jetbrains.kotlin'
	}
	testCompile group: "io.mockk", name: "mockk", version: "${mockk_version}"
	testRuntime("org.jetbrains.spek:spek-junit-platform-engine:${spek_version}") {
		// exclude junit and kotlin from the engine, so we can use our own versions
		exclude group: 'org.junit.platform'
		exclude group: 'org.jetbrains.kotlin'
	}

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}